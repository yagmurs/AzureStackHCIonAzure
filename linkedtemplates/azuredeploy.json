{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "description"
            },
            "defaultValue": "https://raw.githubusercontent.com/yagmurs/AzureStackHCIonAzure/master"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "description"
            },
            "defaultValue": ""
        },
        "sourceVhdLocation": {
            "type": "string",
             "metadata": {
                "description": "Parent path for source image. Will be contatenated with imageFileName parameter."
            },
            "defaultValue": "https://azurestackhciwesteurope.blob.core.windows.net/ashci"
        },
        "imageFileName": {
            "type": "string",
            "metadata": {
                "description": "File name for source image file. Will be contatenated with vhdLocation parameter."
            },
            "allowedValues": ["21h2-g2", "22h2-g2"],
            "defaultValue": "21h2-g2"
        },
        "myIpForRdp": {
            "type": "string",
            "metadata": {
                "description": "provide your Ip address for NSG RDP rule"
            }
        },
        "computerNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Computer Name Prefix for all computers getting deployed"
            },
            "defaultValue": "ashci",
            "minLength": 1,
            "maxLength": 8
        },
        "numberOfAzureStackHciNodes": {
            "type": "int",
            "metadata": {
                "description": "up to 16 nodes allowed"
            },
            "defaultValue": 1,
            "maxValue": 16
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureadmin"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "activeDirectoryFqdn": {
            "type": "string",
            "defaultValue": "corp.contoso.com"        
        },
        "joinNodesToActiveDirectory": {
            "type": "bool",
            "defaultValue": true
        },
        "azureStackHciVmSize": {
            "type": "string",
            "metadata": {
                "description": "VM sizes that support nested virtualization"
            },
            "defaultValue": "Standard_E8ds_v4",
            "allowedValues": [
                "Standard_E2ds_v4",
                "Standard_E4ds_v4",
                "Standard_E8ds_v4",
                "Standard_E16ds_v4",
                "Standard_E20ds_v4",
                "Standard_D8ds_v5",
                "Standard_D16ds_v5",
                "Standard_D32ds_v5",
                "Standard_E16ds_v5",
                "Standard_E20ds_v5",
                "Standard_E32ds_v5",
                "Standard_E64ds_v5"
            ]
        },
        "customVmSize": {
            "type": "string",
            "metadata": {
                "description": "Any other VM size options not listed above. Must be D or E VM series, that supports nested virtualization"
            },
            "defaultValue": ""
        },
        "dataDiskSizeInGB": {
            "type": "int",
            "allowedValues": [
                64,
                128,
                256,
                512,
                1024,
                2048
            ],
            "defaultValue": 128
        },
        "storageType": {
            "type": "string",
            "allowedValues": [
                "Premium_LRS",
                "Standard_LRS",
                "StandardSSD_LRS",
                "UltraSSD_LRS"
            ],
            "defaultValue": "Premium_LRS"
        },
        "numberOfDataDisks": {
            "type": "int",
            "minValue": 3,
            "maxValue": 12,
            "defaultValue": 8
        },
        "installAdminCenterOnDc": {
            "type": "bool",
            "metadata": {
                "description": "description"
            },
            "defaultValue": false
        },
        "enableHybridBenefitServerLicenses": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
            "description": "Enable Azure Hybrid Benefit to use your on-premises Windows Server licenses and reduce cost. See https://docs.microsoft.com/en-us/azure/virtual-machines/windows/hybrid-use-benefit-licensing for more information."
            }
        },
        "salt": {
            "type": "string",
            "metadata": {
                "description": "use utcNow() to randomize some resource names"
            },
            "defaultValue": "1"
        }
    },
    "functions": [],
    "variables": {
        "NodePrefix": "[concat(parameters('computerNamePrefix'), '-')]",
        "dcVMSize": "Standard_B2ms", // "Standard_B2ms"
        "dcVMName": "[concat(variables('NodePrefix'), 'dc1')]",
        "dcImageSku": "2022-datacenter-azure-edition-smalldisk" // "2022-datacenter-azure-edition-core-smalldisk"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "setup-dc",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/linkedtemplates/dc.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "vmName": {
                        "value": "[variables('dcVMName')]"
                    },
                    "vmSize": {
                        "value": "[variables('dcVMSize')]"
                    },
                    "imageSku": {
                        "value": "[variables('dcImageSku')]"
                    },
                    "vmSubnetResourceId": {
                        "value": "[reference('vnet-with-predefined-nsg').outputs.vmSubnetResourceId.value]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "activeDirectoryFqdn": {
                        "value": "[parameters('activeDirectoryFqdn')]"
                    },
                    "storageType": {
                        "value": "[parameters('storageType')]"
                    },
                    "enableHybridBenefitServerLicenses": {
                        "value": "[parameters('enableHybridBenefitServerLicenses')]"
                    },
                    "salt": {
                        "value": "[parameters('salt')]"
                    }
                }
            }
        },
        {
            "condition": "[bool(parameters('installAdminCenterOnDc'))]",
            "name": "enable-wac-extension-on-dc",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'setup-dc')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/linkedtemplates/wac.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[variables('dcVMName')]"
                    },
                    "salt": {
                        "value": "[parameters('salt')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "prepare-gallery-image",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/linkedtemplates/imagefromexternalsource.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sourceVhdLocation": {
                        "value": "[parameters('sourceVhdLocation')]"
                    },
                    "imageFileName": {
                        "value": "[parameters('imageFileName')]"
                    },
                    "salt": {
                        "value": "[parameters('salt')]"
                    }
                }
            }
        },
        {
            "name": "vnet-with-predefined-nsg",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "myIpForRdp": {
                        "value": "[parameters('myIpForRdp')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat('AzureStackHci-node-deployment-', variables('NodePrefix'), 'hv', copyIndex())]",
            "copy": {
                "name": "multiplenodes",
                "count": "[parameters('numberOfAzureStackHciNodes')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/linkedtemplates/hcinode.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "vmName": {
                        "value": "[concat(variables('NodePrefix'), 'hv', copyIndex())]"
                    },
                    "vmSize": {
                        "value": "[if(startsWith(parameters('customVmSize'), 'Standard_'), parameters('customVmSize'), parameters('azureStackHciVmSize'))]"
                    },
                    "managementSubnetResourceId": {
                        "value": "[reference('vnet-with-predefined-nsg').outputs.managementSubnetResourceId.value]"
                    },
                    "vmSubnetResourceId": {
                        "value": "[reference('vnet-with-predefined-nsg').outputs.vmSubnetResourceId.value]"
                    },
                    "imageResourceId": {
                        "value": "[reference('prepare-gallery-image').outputs.imageResourceId.value]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "activeDirectoryFqdn": {
                        "value": "[parameters('activeDirectoryFqdn')]"
                    },
                    "joinNodesToActiveDirectory": {
                        "value": "[parameters('joinNodesToActiveDirectory')]"
                    },
                    "numberOfDataDisks": {
                        "value": "[parameters('numberOfDataDisks')]"
                    },
                    "dataDiskSizeInGB": {
                        "value": "[parameters('dataDiskSizeinGB')]"
                    },
                    "storageType": {
                        "value": "[parameters('storageType')]"
                    },
                    "enableHybridBenefitServerLicenses": {
                        "value": "[parameters('enableHybridBenefitServerLicenses')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'prepare-gallery-image')]",
                "[resourceId('Microsoft.Resources/deployments', 'vnet-with-predefined-nsg')]",
                "[resourceId('Microsoft.Resources/deployments', 'setup-dc')]",
                "[resourceId('Microsoft.Resources/deployments', 'set-vnet-dnsservers')]"
            ]
        },
        {
            "name": "set-vnet-dnsservers",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('_artifactsLocation'), '/linkedtemplates/vnet.json', parameters('_artifactsLocationSasToken'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "myIpForRdp": {
                        "value": "[parameters('myIpForRdp')]"
                    },
                    "dnsServer": {
                        "value": "[reference('setup-dc').outputs.dcIpAddress.value]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'setup-dc')]"
            ]
        }
    ],
    "outputs": {
        "outputFromLinkedTemplate-prepare-gallery-image": {
            "type": "string",
            "value": "[reference('prepare-gallery-image').outputs.imageResourceId.value]"
        },
        "outputFromLinkedTemplate-vnet-with-predefined-nsg-vnetResourceId": {
            "type": "string",
            "value": "[reference('vnet-with-predefined-nsg').outputs.vnetResourceId.value]"
        },
        "outputFromLinkedTemplate-vnet-with-predefined-nsg-managementSubnetResourceId": {
            "type": "string",
            "value": "[reference('vnet-with-predefined-nsg').outputs.managementSubnetResourceId.value]"
        },
        "outputFromLinkedTemplate-vnet-with-predefined-nsg-vmSubnetResourceId": {
            "type": "string",
            "value": "[reference('vnet-with-predefined-nsg').outputs.vmSubnetResourceId.value]"
        }
    }
}