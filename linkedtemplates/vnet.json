{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vNetName": {
            "type": "string",
            "defaultValue": "AzureStackvNet",
            "metadata": {
                "description": "description"
            }
        },
        "vNetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.255.254.0/23",
            "metadata": {
                "description": "description"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "description"
            }
        },
        "managementSubnetName": {
            "type": "string",
            "defaultValue": "management-subnet",
            "metadata": {
                "description": "description"
            }
        },
        "vmSubnetName": {
            "type": "string",
            "defaultValue": "vm-subnet",
            "metadata": {
                "description": "description"
            }
        },
        "managementSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.255.254.0/24",
            "metadata": {
                "description": "description"
            }
        },
        "vmSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.255.255.0/24",
            "metadata": {
                "description": "description"
            }
        },
        "dnsServer": {
            "type": "string",
            "defaultValue": "usevnetdefaults",
            "metadata": {
                "description": "specify multiple DNS servers with commas"
            }
        },
        "myIpForRdp": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        }
    },
    "functions": [],
    "variables": {
        "dnsServersArray": "[if(equals(parameters('dnsServer'), 'usevnetdefaults'), 'null', array(if(contains(parameters('dnsServer'), ','), split(parameters('dnsServer'), ','), parameters('dnsServer'))))]",
        "managementSubnetNsgName": "[concat(parameters('managementSubnetName'), '-nsg')]",
        "vmSubnetNsgName": "[concat(parameters('vmSubnetName'), '-nsg')]",
        "vmSubnetRouteTableName": "[concat(parameters('vmSubnetName'), '-rt')]"
    },
    "resources": [
        {
            "name": "[variables('managementSubnetNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Management-Inbound",
                        "properties": {
                            "description": "Allow Management traffic from trusted Ip address",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "80",
                                "443",
                                "3389",
                                "5985",
                                "5986"
                            ],
                            "sourceAddressPrefix": "[parameters('myIpForRdp')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 301,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmSubnetNsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Management-Inbound",
                        "properties": {
                            "description": "Allow Management traffic from trusted Ip address",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "80",
                                "443",
                                "3389",
                                "5985",
                                "5986"
                            ],
                            "sourceAddressPrefix": "[parameters('myIpForRdp')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 301,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmSubnetRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "routes": [
                    {
                        "name": "nested-vms-route",
                        "properties": {
                            "addressPrefix": "192.168.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.255.255.4"
                        }
                    }
                ],
                "disableBgpRoutePropagation": true
            }
        },
        {
            "name": "[parameters('vNetName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "[parameters('vNetName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vNetAddressPrefix')]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": "[variables('dnsServersArray')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('managementSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('managementSubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('managementSubnetNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('vmSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('vmSubnetAddressPrefix')]",
                            "routeTable": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/routeTables', variables('vmSubnetRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('vmSubnetNsgName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('managementSubnetNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmSubnetNsgName'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('vmSubnetRouteTableName'))]"
            ]
        }
    ],
    "outputs": {
        "vNetResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetName'))]"
        },
        "managementSubnetResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('managementSubnetName'))]"
        },
        "vmSubnetResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vNetName'), parameters('vmSubnetName'))]"
        }
    }
}